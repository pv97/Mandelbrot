{"version":3,"sources":["webpack:///webpack/bootstrap bec48483a204327e228d","webpack:///./lib/mandelbrot.js","webpack:///./lib/graph.js","webpack:///./lib/complex.js","webpack:///./lib/color_scheme.js","webpack:///./lib/j_graph.js","webpack:///./lib/rectangle.js","webpack:///./lib/util.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;;;;;;ACrNA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,eAAe;AAChC;;AAEA,oBAAmB,cAAc;AACjC;;AAEA;AACA;;AAEA,wBAAuB,OAAO;AAC9B,2EAA0E;AAC1E,6EAA4E;AAC5E,4EAA2E;AAC3E,mDAAkD;AAClD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;;;;;;;AClBA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;;;;;;;AC3DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,eAAe;AAChC;;AAEA,oBAAmB,cAAc;AACjC;;AAEA;AACA;;AAEA,wBAAuB,OAAO;AAC9B,2EAA0E;AAC1E,6EAA4E;AAC5E,4EAA2E;AAC3E,mDAAkD;AAClD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bec48483a204327e228d\n **/","const Graph = require(\"./graph\");\nconst JGraph = require(\"./j_graph\");\nconst Rectangle = require(\"./rectangle\");\nconst Util = require(\"./util\");\n\nvar resize = undefined;\n\ndocument.addEventListener(\"DOMContentLoaded\", MandelbrotJulia);\n\nfunction optimalResize(){\n  if(resize){\n    clearTimeout(resize)\n  }\n  resize = setTimeout(function(){\n    MandelbrotJulia()\n  },2000)\n}\n\nwindow.addEventListener(\"resize\", optimalResize);\n\nfunction MandelbrotJulia(){\n  let canvas = document.getElementById(\"canvas\");\n  let Jcanvas = document.getElementById(\"Jcanvas\");\n  let mask = document.getElementById(\"mask\");\n  let Jmask = document.getElementById(\"Jmask\");\n\n  //Mandelbrot Settings\n  let ZinputA = document.getElementById(\"ZinputA\");\n  let ZinputB = document.getElementById(\"ZinputB\");\n  let reset = document.getElementById(\"reset\");\n  let explanation = document.getElementById(\"explanation\");\n  let explanationText = document.getElementById(\"explanation-text\");\n  let colorSelector = document.getElementById(\"color-selector\");\n  let precisionSelector = document.getElementById(\"precision-selector\");\n  let ratioCheckbox = document.getElementById(\"ratio-checkbox\");\n\n  //Julia Settings\n  let CinputA = document.getElementById(\"CinputA\");\n  let CinputB = document.getElementById(\"CinputB\");\n  let Jreset = document.getElementById(\"Jreset\");\n\n  //Global Variables\n  let z0 = [0,0];\n  let c = [0,0];\n  let vertex1;\n  let vertex2;\n  let drag = false;\n  let color = \"1\";\n  let precision = \"1\";\n  let keepRatio = true;\n\n  //Mandelbrot Set Variables\n  let width = window.innerWidth*2/3;\n  let height = window.innerHeight;\n  let ratio = width/height;\n  let xrange = [-2,0.5];\n  let yrange = [-1,1];\n  let maxIter = 40;\n  canvas.width = width;\n  canvas.height = height;\n  mask.width = width;\n  mask.height = height;\n  const ctx = canvas.getContext(\"2d\");\n  const ctxMask = mask.getContext(\"2d\");\n  let graph = new Graph(ctx, width, height)\n  let rectangle = new Rectangle(ctxMask, width, height)\n\n  //Julia Set Variables\n  let Jwidth = window.innerWidth*1/3;\n  let Jratio = Jwidth/height;\n  let Jxrange = [-2,2];\n  let Jyrange = [-2,2];\n  let JmaxIter = 40;\n  Jcanvas.width = Jwidth;\n  Jcanvas.height = height;\n  Jmask.width = Jwidth;\n  Jmask.height = height;\n  const Jctx = Jcanvas.getContext(\"2d\");\n  const JctxMask = Jmask.getContext(\"2d\");\n  let Jgraph = new JGraph(Jctx, Jwidth, height)\n  let Jrectangle = new Rectangle(JctxMask, Jwidth, height)\n\n  graph.render(xrange,yrange,z0,maxIter,color,precision);\n  Jgraph.render(Jxrange,Jyrange,c,JmaxIter,color,precision);\n\n\n  //Settings\n  colorSelector.addEventListener(\"change\",(e)=>{\n    color= e.currentTarget.value;\n    graph.render(xrange,yrange,z0,maxIter,color,precision);\n    Jgraph.render(Jxrange,Jyrange,c,JmaxIter,color,precision);\n  })\n\n  precisionSelector.addEventListener(\"change\",(e)=>{\n    precision= e.currentTarget.value;\n    graph.render(xrange,yrange,z0,maxIter,color,precision);\n    Jgraph.render(Jxrange,Jyrange,c,JmaxIter,color,precision);\n  })\n\n  explanation.addEventListener(\"click\",(e)=>{\n    if (explanationText.className===\"invisible\"){\n      explanationText.className = \"visible\"\n    } else {\n      explanationText.className = \"invisible\"\n    }\n  })\n\n  ratioCheckbox.addEventListener(\"change\",(e)=>{\n    keepRatio = keepRatio? false : true;\n  })\n\n  //Mandelbrot Settings\n  ZinputA.addEventListener(\"change\",(e)=>{\n    z0[0] = parseFloat(e.currentTarget.value);\n    graph.render(xrange,yrange,z0,maxIter,color,precision);\n  })\n\n  ZinputB.addEventListener(\"change\",(e)=>{\n    z0[1] = parseFloat(e.currentTarget.value);\n    graph.render(xrange,yrange,z0,maxIter,color,precision);\n  })\n\n  reset.addEventListener(\"click\",(e)=>{\n    maxIter = 40;\n    xrange = [-2,0.5];\n    yrange = [-1,1];\n    z0 = [0,0];\n    ZinputA.value = 0;\n    ZinputB.value = 0;\n    graph.render(xrange,yrange,z0,maxIter,color,precision);\n  })\n\n  //Julia Settings\n  CinputA.addEventListener(\"change\",(e)=>{\n    c[0] = parseFloat(e.currentTarget.value);\n    console.log(c);\n    Jgraph.render(Jxrange,Jyrange,c,JmaxIter,color,precision);\n  })\n\n  CinputB.addEventListener(\"change\",(e)=>{\n    c[1] = parseFloat(e.currentTarget.value);\n    Jgraph.render(Jxrange,Jyrange,c,JmaxIter,color,precision);\n  })\n\n  Jreset.addEventListener(\"click\",(e)=>{\n    maxIter = 40;\n    Jxrange = [-2,2];\n    Jyrange = [-2,2];\n    c = [0,0];\n    CinputA.value = 0;\n    CinputB.value = 0;\n    Jgraph.render(Jxrange,Jyrange,c,JmaxIter,color,precision);\n  })\n\n  //Mandelbrot Overlay\n  mask.addEventListener(\"mousedown\",(e)=>{\n    vertex1 = [e.clientX,e.clientY];\n    drag = true;\n  })\n\n  mask.addEventListener(\"mousemove\",(e)=>{\n    if(drag){\n      vertex2 = [e.clientX,e.clientY];\n      rectangle.render(vertex1,vertex2,ratio,keepRatio);\n    }\n  })\n\n  mask.addEventListener(\"mouseup\",(e)=>{\n    drag = false;\n    rectangle.clear();\n    vertex2 = [e.clientX,e.clientY];\n    if(Util.isClick(vertex1,vertex2)){\n      c = Util.getC(vertex1,xrange,yrange,width,height);\n      CinputA.value = c[0]\n      CinputB.value = c[1]\n      Jgraph.render(Jxrange,Jyrange,c,JmaxIter,color,precision);\n    } else {\n      xrange = Util.newXRange(vertex1,vertex2,xrange,width,height,ratio,keepRatio);\n      yrange = Util.newYRange(vertex1,vertex2,yrange,height);\n      maxIter+=5;\n      graph.render(xrange,yrange,z0,maxIter,color,precision);\n    }\n  })\n\n  //Julia Overlay\n  Jmask.addEventListener(\"mousedown\",(e)=>{\n    vertex1 = [e.clientX-width,e.clientY];\n    drag = true;\n  })\n\n  Jmask.addEventListener(\"mousemove\",(e)=>{\n    if(drag){\n      vertex2 = [e.clientX-width,e.clientY];\n      Jrectangle.render(vertex1,vertex2,ratio,keepRatio);\n    }\n  })\n\n  Jmask.addEventListener(\"mouseup\",(e)=>{\n    drag = false;\n    Jrectangle.clear();\n    vertex2 = [e.clientX-width,e.clientY];\n    if(Util.isClick(vertex1,vertex2)){\n      z0 = Util.getZ(vertex1,Jxrange,Jyrange,Jwidth,height);\n      ZinputA.value = z0[0]\n      ZinputB.value = z0[1]\n      graph.render(xrange,yrange,z0,maxIter,color,precision);\n    } else {\n      Jxrange = Util.newXRange(vertex1,vertex2,Jxrange,Jwidth,height,ratio,keepRatio);\n      Jyrange = Util.newYRange(vertex1,vertex2,Jyrange,height);\n      JmaxIter+=5;\n      Jgraph.render(Jxrange,Jyrange,c,JmaxIter,color,precision);\n    }\n  })\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/mandelbrot.js\n ** module id = 0\n ** module chunks = 0\n **/","const Complex = require(\"./complex\");\nconst ColorScheme = require(\"./color_scheme\");\n\nclass Graph {\n  constructor(ctx, width, height) {\n    this.ctx = ctx;\n    this.width = width;\n    this.height = height;\n    this.imagedata = ctx.createImageData(width, height)\n  }\n\n  render(xrange,yrange,z0,maxIter,color,precision){\n    let xmin = xrange[0];\n    let xmax = xrange[1];\n    let ymin = yrange[0];\n    let ymax = yrange[1];\n    let xdif = xmax-xmin;\n    let ydif = ymax-ymin;\n    let p = parseInt(precision)\n    let a;\n    let b;\n    let n;\n    let val;\n    let pixelindex = 0;\n\n    for (var y=0; y<this.height; y++) {\n      b = ymin + ydif*(y/this.height)\n\n      for (var x=0; x<this.width; x+=p) {\n        a = xmin + xdif*(x/this.width)\n\n        n = this.iterate([a,b],z0,maxIter);\n        val = 255*n/maxIter;\n\n        for (var z = 0; z < p; z++) {\n          this.imagedata.data[pixelindex++] = ColorScheme[color].red(val);   // Red\n          this.imagedata.data[pixelindex++] = ColorScheme[color].green(val);  // Green\n          this.imagedata.data[pixelindex++] = ColorScheme[color].blue(val);  // Blue\n          this.imagedata.data[pixelindex++] = 255;   // Alpha\n        }\n      }\n    }\n\n    this.ctx.putImageData(this.imagedata, 0, 0);\n  }\n\n  iterate(c,z0,maxIter){\n    let n = 0;\n    let z = z0\n    let magnitude = 0\n\n    while (n<maxIter) {\n      z = Complex.add(Complex.square(z),c)\n      magnitude = Complex.abs(z);\n\n      if (magnitude > 4) {\n        return n;\n      }\n\n      n++;\n    }\n    return maxIter\n  }\n}\n\nmodule.exports = Graph;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/graph.js\n ** module id = 1\n ** module chunks = 0\n **/","const Complex = {\n  abs(z){\n    let a = z[0];\n    let b = z[1];\n    return a*a + b*b;\n  },\n\n  square(z){\n    let a = z[0];\n    let b = z[1];\n    return [a*a - b*b, 2*a*b];\n  },\n\n  add(z,c){\n    return [z[0]+c[0],z[1]+c[1]];\n  }\n};\n\nmodule.exports = Complex;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/complex.js\n ** module id = 2\n ** module chunks = 0\n **/","const ColorScheme = {\n  1:{\n    red(val){\n      return val;\n    },\n    green(val){\n      return val;\n    },\n    blue(val){\n      return val;\n    }\n  },\n  2:{\n    red(val){\n      return 122+122*Math.sin(val/40);\n    },\n    green(val){\n      return 122+122*Math.cos(val/40);\n    },\n    blue(val){\n      return 255-Math.log(val);\n    }\n  },\n  3:{\n    red(val){\n      return 255-Math.log(val);\n    },\n    green(val){\n      return 122+122*Math.sin(val/60);\n    },\n    blue(val){\n      return 122+122*Math.cos(val/20);\n    }\n  },\n  4:{\n    red(val){\n      return 122+122*Math.sin(val/129);\n    },\n    green(val){\n      return 122+122*Math.cos(val/108);\n    },\n    blue(val){\n      return 122+122*Math.cos(val/80);\n    }\n  },\n  5:{\n    red(val){\n      return 122-122*(Math.cos(-val/150))/(Math.sin(val/140)+1);\n    },\n    green(val){\n      return 122-122*Math.cos(val/30)*Math.cos(val/280);\n    },\n    blue(val){\n      return 122-122*(Math.sin(val/40))/(1+Math.cos(-val/220));\n    }\n  },\n\n};\n\nmodule.exports = ColorScheme;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/color_scheme.js\n ** module id = 3\n ** module chunks = 0\n **/","const Complex = require(\"./complex\");\nconst ColorScheme = require(\"./color_scheme\");\n\nclass JGraph {\n  constructor(ctx, width, height) {\n    this.ctx = ctx;\n    this.width = width;\n    this.height = height;\n    this.imagedata = ctx.createImageData(width, height)\n  }\n\n  render(xrange,yrange,c,maxIter,color,precision){\n    let xmin = xrange[0];\n    let xmax = xrange[1];\n    let ymin = yrange[0];\n    let ymax = yrange[1];\n    let xdif = xmax-xmin;\n    let ydif = ymax-ymin;\n    let p = parseInt(precision)\n    let a;\n    let b;\n    let n;\n    let val;\n    let pixelindex = 0;\n\n    for (var y=0; y<this.height; y++) {\n      b = ymin + ydif*(y/this.height)\n\n      for (var x=0; x<this.width; x+=p) {\n        a = xmin + xdif*(x/this.width)\n\n        n = this.iterate(c,[a,b],maxIter);\n        val = 255*n/maxIter;\n\n        for (var z = 0; z < p; z++) {\n          this.imagedata.data[pixelindex++] = ColorScheme[color].red(val);   // Red\n          this.imagedata.data[pixelindex++] = ColorScheme[color].green(val);  // Green\n          this.imagedata.data[pixelindex++] = ColorScheme[color].blue(val);  // Blue\n          this.imagedata.data[pixelindex++] = 255;   // Alpha\n        }\n      }\n    }\n\n    this.ctx.putImageData(this.imagedata, 0, 0);\n  }\n\n  iterate(c,z0,maxIter){\n    let n = 0;\n    let z = z0\n    let magnitude = 0\n\n    while (n<maxIter) {\n      z = Complex.add(Complex.square(z),c)\n      magnitude = Complex.abs(z);\n\n      if (magnitude > 4) {\n        return n;\n      }\n\n      n++;\n    }\n    return maxIter\n  }\n}\n\nmodule.exports = JGraph;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/j_graph.js\n ** module id = 4\n ** module chunks = 0\n **/","const Complex = require(\"./complex\");\nconst Util = require(\"./util\");\n\nclass Rectangle {\n  constructor(ctxMask, width, height) {\n    this.ctx = ctxMask;\n    this.width = width;\n    this.height = height;\n  }\n\n  render(vertex1,vertex2,ratio,keepRatio){\n    let topLeft = Util.getTopLeftCorner(vertex1,vertex2);\n    let lengths = Util.getSideLength(vertex1,vertex2);\n    let x0 = topLeft[0]\n    let y0 = topLeft[1]\n    let lengthx;\n    let lengthy = lengths[1]\n\n    if(keepRatio){\n      lengthx = lengthy*ratio\n      if(vertex2[0]-vertex1[0]<0){\n        x0 = vertex1[0]-lengthx\n      }\n    } else {\n      lengthx = lengths[0]\n    }\n\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    this.ctx.strokeRect(x0,y0,lengthx,lengthy);\n  }\n\n  clear(){\n    this.ctx.clearRect(0, 0, this.width, this.height);\n  }\n\n}\n\nmodule.exports = Rectangle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/rectangle.js\n ** module id = 5\n ** module chunks = 0\n **/","const Util = {\n  newXRange (vertex1,vertex2,xrange,width,height,ratio,keepRatio) {\n    let oldDif = xrange[1]-xrange[0];\n    let xmin = xrange[0] + oldDif*(Math.min(vertex1[0],vertex2[0]))/width;\n    let xmax = xrange[0] + oldDif*(Math.max(vertex1[0],vertex2[0]))/width;\n    if(keepRatio){\n      if(vertex2[0] - vertex1[0] < 0){\n        xmin = xmax - oldDif*Math.abs(vertex1[1]-vertex2[1])/height;\n      } else {\n        xmax = xmin + oldDif*Math.abs(vertex1[1]-vertex2[1])/height;\n      }\n    }\n    return [xmin,xmax];\n  },\n  newYRange (vertex1,vertex2,yrange,height) {\n    let oldDif = yrange[1]-yrange[0];\n    let ymin = yrange[0] + oldDif*(Math.min(vertex1[1],vertex2[1]))/height;\n    let ymax = yrange[0] + oldDif*(Math.max(vertex1[1],vertex2[1]))/height;\n    return [ymin,ymax];\n  },\n  getTopLeftCorner(vertex1,vertex2){\n    let x = Math.min(vertex1[0],vertex2[0]);\n    let y = Math.min(vertex1[1],vertex2[1]);\n    return [x,y]\n  },\n  getSideLength(vertex1,vertex2){\n    let x = Math.abs(vertex1[0]-vertex2[0]);\n    let y = Math.abs(vertex1[1]-vertex2[1]);\n    return [x,y]\n  },\n  isClick(vertex1,vertex2){\n    xdif = Math.abs(vertex1[0]-vertex2[0])\n    ydif = Math.abs(vertex1[1]-vertex2[1])\n    if(xdif+ydif < 5){\n      return true\n    } else {\n      return false\n    }\n  },\n  getC(vertex1,xrange,yrange,width,height){\n    let oldDifx = xrange[1]-xrange[0];\n    let oldDify = yrange[1]-yrange[0];\n    let x = xrange[0] + oldDifx*vertex1[0]/width;\n    let y = yrange[0] + oldDify*vertex1[1]/height;\n    return [x,y]\n  },\n  getZ(vertex1,Jxrange,Jyrange,Jwidth,height){\n    let oldDifx = Jxrange[1]-Jxrange[0];\n    let oldDify = Jyrange[1]-Jyrange[0];\n    let x = Jxrange[0] + oldDifx*vertex1[0]/Jwidth;\n    let y = Jyrange[0] + oldDify*vertex1[1]/height;\n    return [x,y]\n  }\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}