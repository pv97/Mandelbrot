{"version":3,"sources":["webpack:///webpack/bootstrap 943a95985ee51e5b559d","webpack:///./lib/mandlebrot.js","webpack:///./lib/graph.js","webpack:///./lib/complex.js","webpack:///./lib/util.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH,EAAC;;;;;;;ACjCD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,eAAe;AAChC,oBAAmB,cAAc;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iDAAgD;AAChD,mDAAkD;AAClD,kDAAiD;AACjD,iDAAgD;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 943a95985ee51e5b559d\n **/","const Graph = require(\"./graph\");\nconst Util = require(\"./util\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  var canvas = document.getElementById(\"canvas\");\n  var width = window.innerWidth;\n  var height = window.innerHeight;\n  var maxIter = 40;\n  canvas.width = width;\n  canvas.height = height;\n\n  const ctx = canvas.getContext(\"2d\");\n  let xrange = [-2,1];\n  let yrange = [-1,1];\n  let z0 = [0,0];\n\n  var graph = new Graph(ctx, width, height)\n  graph.render(xrange,yrange,z0,maxIter);\n\n  let vertex1;\n  let vertex2;\n\n  canvas.addEventListener(\"mousedown\",(e)=>{\n    vertex1 = [e.clientX,e.clientY];\n  })\n\n  canvas.addEventListener(\"mouseup\",(e)=>{\n    vertex2 = [e.clientX,e.clientY];\n    xrange = Util.newXRange(vertex1,vertex2,xrange,width);\n    yrange = Util.newYRange(vertex1,vertex2,yrange,height);\n    graph.render(xrange,yrange,z0,maxIter);\n  })\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/mandlebrot.js\n ** module id = 0\n ** module chunks = 0\n **/","const Complex = require(\"./complex\");\n\nclass Graph {\n  constructor(ctx, width, height) {\n    this.ctx = ctx;\n    this.width = width;\n    this.height = height;\n    this.imagedata = ctx.createImageData(width, height)\n  }\n\n  render(xrange,yrange,z0,maxIter){\n    let xmin = xrange[0];\n    let xmax = xrange[1];\n    let ymin = yrange[0];\n    let ymax = yrange[1];\n    let xdif = xmax-xmin;\n    let ydif = ymax-ymin;\n\n    var pixelindex = 0;\n    for (var y=0; y<this.height; y++) {\n      for (var x=0; x<this.width; x++) {\n        let a = xmin + xdif*(x/this.width)\n        let b = ymin + ydif*(y/this.height)\n        let c = [a, b]\n\n        let n = this.iterate(c,z0,maxIter);\n        let val = 255*n/maxIter;\n\n        var red = val;\n        var green = val;\n        var blue = val;\n\n        this.imagedata.data[pixelindex++] = red;     // Red\n        this.imagedata.data[pixelindex++] = green; // Green\n        this.imagedata.data[pixelindex++] = blue;  // Blue\n        this.imagedata.data[pixelindex++] = 255;   // Alpha\n      }\n    }\n\n    this.ctx.putImageData(this.imagedata, 0, 0);\n  }\n\n  iterate(c,z0,maxIter){\n    let n = 0;\n    let z = z0\n    let magnitude = 0\n    while (n<maxIter) {\n      z = Complex.add(Complex.square(z),c)\n      magnitude = Complex.abs(z);\n\n      if (magnitude > 2) {\n        return n;\n      }\n\n      n++;\n    }\n    return maxIter\n  }\n}\n\nmodule.exports = Graph;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/graph.js\n ** module id = 1\n ** module chunks = 0\n **/","const Complex = {\n  abs(z){\n    let a = z[0];\n    let b = z[1];\n    return a*a + b*b;\n  },\n\n  square(z){\n    let a = z[0];\n    let b = z[1];\n    return [a*a - b*b, 2*a*b];\n  },\n\n  add(z,c){\n    return [z[0]+c[0],z[1]+c[1]];\n  }\n};\n\nmodule.exports = Complex;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/complex.js\n ** module id = 2\n ** module chunks = 0\n **/","const Util = {\n  newXRange (vertex1,vertex2,xrange,width) {\n    oldDif = xrange[1]-xrange[0];\n    xmin = xrange[0] + oldDif*(Math.min(vertex1[0],vertex2[0]))/width;\n    xmax = xrange[0] + oldDif*(Math.max(vertex1[0],vertex2[0]))/width;\n    return [xmin,xmax]\n  },\n  newYRange (vertex1,vertex2,yrange,height) {\n    oldDif = yrange[1]-yrange[0];\n    ymin = yrange[0] + oldDif*(Math.min(vertex1[1],vertex2[1]))/height;\n    ymax = yrange[0] + oldDif*(Math.max(vertex1[1],vertex2[1]))/height;\n    return [ymin,ymax]\n  }\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}