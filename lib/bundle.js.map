{"version":3,"sources":["webpack:///webpack/bootstrap b28d9e79dc4dba3a8c63","webpack:///./lib/mandlebrot.js","webpack:///./lib/graph.js","webpack:///./lib/complex.js","webpack:///./lib/rectangle.js","webpack:///./lib/util.js","webpack:///./lib/color_scheme.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH,EAAC;;;;;;;AC9FD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,eAAe;AAChC,oBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;;AAEA,yEAAwE;AACxE,2EAA0E;AAC1E,0EAAyE;AACzE,iDAAgD;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;;;;;;;AClBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzBA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b28d9e79dc4dba3a8c63\n **/","const Graph = require(\"./graph\");\nconst Rectangle = require(\"./rectangle\");\nconst Util = require(\"./util\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  let canvas = document.getElementById(\"canvas\");\n  let mask = document.getElementById(\"mask\");\n  let inputA = document.getElementById(\"inputA\");\n  let inputB = document.getElementById(\"inputB\");\n  let reset = document.getElementById(\"reset\");\n  let explanation = document.getElementById(\"explanation\");\n  let explanationText = document.getElementById(\"explanation-text\");\n  let colorSelector = document.getElementById(\"color-selector\");\n\n  let width = window.innerWidth;\n  let height = window.innerHeight;\n  let maxIter = 40;\n  let xrange = [-2,1];\n  let yrange = [-1,1];\n  let z0 = [0,0];\n  let vertex1;\n  let vertex2;\n  let drag = false;\n  let color = \"1\";\n\n  canvas.width = width;\n  canvas.height = height;\n  mask.width = width;\n  mask.height = height;\n\n  const ctx = canvas.getContext(\"2d\");\n  const ctxMask = mask.getContext(\"2d\");\n  let graph = new Graph(ctx, width, height)\n  let rectangle = new Rectangle(ctxMask, width, height)\n\n  graph.render(xrange,yrange,z0,maxIter,color);\n\n  inputA.addEventListener(\"change\",(e)=>{\n    z0[0] = e.currentTarget.value;\n    graph.render(xrange,yrange,z0,maxIter,color);\n  })\n\n  inputB.addEventListener(\"change\",(e)=>{\n    z0[1] = e.currentTarget.value;\n    graph.render(xrange,yrange,z0,maxIter,color);\n  })\n\n  colorSelector.addEventListener(\"change\",(e)=>{\n    color= e.currentTarget.value;\n    graph.render(xrange,yrange,z0,maxIter,color);\n  })\n\n  reset.addEventListener(\"click\",(e)=>{\n    maxIter = 40;\n    xrange = [-2,1];\n    yrange = [-1,1];\n    z0 = [0,0];\n    inputA.value = 0;\n    inputB.value = 0;\n    graph.render(xrange,yrange,z0,maxIter,color);\n  })\n\n  explanation.addEventListener(\"click\",(e)=>{\n    if (explanationText.className===\"invisible\"){\n      explanationText.className = \"visible\"\n    } else {\n      explanationText.className = \"invisible\"\n    }\n  })\n\n  mask.addEventListener(\"mousedown\",(e)=>{\n    vertex1 = [e.clientX,e.clientY];\n    drag = true;\n  })\n\n  mask.addEventListener(\"mousemove\",(e)=>{\n    if(drag){\n      vertex2 = [e.clientX,e.clientY];\n      rectangle.render(vertex1,vertex2);\n    }\n  })\n\n  mask.addEventListener(\"mouseup\",(e)=>{\n    drag = false;\n    rectangle.clear();\n    vertex2 = [e.clientX,e.clientY];\n    xrange = Util.newXRange(vertex1,vertex2,xrange,width);\n    yrange = Util.newYRange(vertex1,vertex2,yrange,height);\n    maxIter+=10;\n    console.log(maxIter);\n    graph.render(xrange,yrange,z0,maxIter,color);\n  })\n\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/mandlebrot.js\n ** module id = 0\n ** module chunks = 0\n **/","const Complex = require(\"./complex\");\nconst ColorScheme = require(\"./color_scheme\");\n\nclass Graph {\n  constructor(ctx, width, height) {\n    this.ctx = ctx;\n    this.width = width;\n    this.height = height;\n    this.imagedata = ctx.createImageData(width, height)\n  }\n\n  render(xrange,yrange,z0,maxIter,color){\n    let xmin = xrange[0];\n    let xmax = xrange[1];\n    let ymin = yrange[0];\n    let ymax = yrange[1];\n    let xdif = xmax-xmin;\n    let ydif = ymax-ymin;\n\n    var pixelindex = 0;\n    for (var y=0; y<this.height; y++) {\n      for (var x=0; x<this.width; x++) {\n        let a = xmin + xdif*(x/this.width)\n        let b = ymin + ydif*(y/this.height)\n\n        let n = this.iterate([a,b],z0,maxIter);\n        let val = 255*n/maxIter;\n\n        this.imagedata.data[pixelindex++] = ColorScheme[color].red(val);   // Red\n        this.imagedata.data[pixelindex++] = ColorScheme[color].green(val);  // Green\n        this.imagedata.data[pixelindex++] = ColorScheme[color].blue(val);  // Blue\n        this.imagedata.data[pixelindex++] = 255;   // Alpha\n      }\n    }\n\n    this.ctx.putImageData(this.imagedata, 0, 0);\n  }\n\n  iterate(c,z0,maxIter){\n    let n = 0;\n    let z = z0\n    let magnitude = 0\n    while (n<maxIter) {\n      z = Complex.add(Complex.square(z),c)\n      magnitude = Complex.abs(z);\n\n      if (magnitude > 4) {\n        return n;\n      }\n\n      n++;\n    }\n    return maxIter\n  }\n}\n\nmodule.exports = Graph;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/graph.js\n ** module id = 1\n ** module chunks = 0\n **/","const Complex = {\n  abs(z){\n    let a = z[0];\n    let b = z[1];\n    return a*a + b*b;\n  },\n\n  square(z){\n    let a = z[0];\n    let b = z[1];\n    return [a*a - b*b, 2*a*b];\n  },\n\n  add(z,c){\n    return [z[0]+c[0],z[1]+c[1]];\n  }\n};\n\nmodule.exports = Complex;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/complex.js\n ** module id = 2\n ** module chunks = 0\n **/","const Complex = require(\"./complex\");\nconst Util = require(\"./util\");\n\nclass Rectangle {\n  constructor(ctxMask, width, height) {\n    this.ctx = ctxMask;\n    this.width = width;\n    this.height = height;\n  }\n\n  render(vertex1,vertex2){\n    let topLeft = Util.getTopLeftCorner(vertex1,vertex2);\n    let lengths = Util.getSideLength(vertex1,vertex2);\n    let x0 = topLeft[0]\n    let y0 = topLeft[1]\n    let lengthx = lengths[0]\n    let lengthy = lengths[1]\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    this.ctx.strokeRect(x0,y0,lengthx,lengthy);\n  }\n\n  clear(){\n    this.ctx.clearRect(0, 0, this.width, this.height);\n  }\n\n}\n\nmodule.exports = Rectangle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/rectangle.js\n ** module id = 3\n ** module chunks = 0\n **/","const Util = {\n  newXRange (vertex1,vertex2,xrange,width) {\n    let oldDif = xrange[1]-xrange[0];\n    let xmin = xrange[0] + oldDif*(Math.min(vertex1[0],vertex2[0]))/width;\n    let xmax = xrange[0] + oldDif*(Math.max(vertex1[0],vertex2[0]))/width;\n    return [xmin,xmax];\n  },\n  newYRange (vertex1,vertex2,yrange,height) {\n    let oldDif = yrange[1]-yrange[0];\n    let ymin = yrange[0] + oldDif*(Math.min(vertex1[1],vertex2[1]))/height;\n    let ymax = yrange[0] + oldDif*(Math.max(vertex1[1],vertex2[1]))/height;\n    return [ymin,ymax];\n  },\n  getTopLeftCorner(vertex1,vertex2){\n    let x = Math.min(vertex1[0],vertex2[0]);\n    let y = Math.min(vertex1[1],vertex2[1]);\n    return [x,y]\n  },\n  getSideLength(vertex1,vertex2){\n    let x = Math.abs(vertex1[0]-vertex2[0]);\n    let y = Math.abs(vertex1[1]-vertex2[1]);\n    return [x,y]\n  }\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 4\n ** module chunks = 0\n **/","const ColorScheme = {\n  1:{\n    red(val){\n      return val;\n    },\n    green(val){\n      return val;\n    },\n    blue(val){\n      return val;\n    }\n  },\n  2:{\n    red(val){\n      return 122+122*Math.sin(val/129);\n    },\n    green(val){\n      return 122+122*Math.cos(val/108);\n    },\n    blue(val){\n      return 122+122*Math.cos(val/80);\n    }\n  },\n  3:{\n    red(val){\n      return 255-Math.log(val);\n    },\n    green(val){\n      return 122+122*Math.sin(val/60);\n    },\n    blue(val){\n      return 122+122*Math.cos(val/20);\n    }\n  },\n  4:{\n    red(val){\n      return 122+122*Math.sin(val/40);\n    },\n    green(val){\n      return 122+122*Math.cos(val/40);\n    },\n    blue(val){\n      return 255-Math.log(val);\n    }\n  },\n  5:{\n    red(val){\n      return val;\n    },\n    green(val){\n      return 122+122*Math.cos(val/20)*Math.sin(val/40);\n    },\n    blue(val){\n      return 122+122*(Math.sin(val/40)+1)/(1+Math.cos(-val/20));\n    }\n  },\n\n};\n\nmodule.exports = ColorScheme;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/color_scheme.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}